//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMA.WebApi.DataAccess.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DapperResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DapperResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MMA.WebApi.DataAccess.Resources.DapperResources", typeof(DapperResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct ai.Id
        ///		from 
        ///		(select  ai.*,  aiu.UnitId as UnitId from AgendaItem ai 
        ///		inner join AgendaItemVisibility aiv on ai.Id = aiv.AgendaItemId
        ///		inner join AgendaItemUnit aiu on ai.Id = aiu.AgendaItemId 
        ///		inner join UserProfileUnit upu on upu.UnitId = aiv.UnitId
        ///		inner join UserProfile up on up.Id = upu.UserProfileId
        ///		inner join dbo.[User] u on u.Id = up.UserId
        ///		where u.AccountDataId = @userId and aiv.UserId is null
        ///	
        ///		union 
        ///		
        ///		select  ai.*, aiu.UnitId as UnitId from AgendaIt [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AgendaItemIds {
            get {
                return ResourceManager.GetString("AgendaItemIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select CAST(CASE WHEN Count(distinct ai.Id) &gt; 0 THEN 1  ELSE 0   END as BIT)
        ///	from 
        ///	AgendaItem ai 
        ///	left join AgendaItemUnit aiu on ai.Id = aiu.AgendaItemId 
        ///	left join  Unit un on un.Id = aiu.UnitId
        ///	left join AgendaItemStatus ais on ai.StatusId = ais.Id
        ///	left join AgendaItemType at on at.Id = ai.TypeId
        ///	inner join vwUserProfilePermissions upp on 
        ///	(upp.UnitId = aiu.UnitId or  upp.UnitId is null) 
        ///	and upp.PermissionId = &apos;module_agenda_items&apos;
        ///	and ( upp.ProfileCompanyId = ai.CompanyId or  upp.Pr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CanSeeAgendaItem {
            get {
                return ResourceManager.GetString("CanSeeAgendaItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select  CAST(CASE WHEN Count( distinct meeting.Id) &gt; 0 THEN 1  ELSE 0   END as BIT)
        ///	from 
        ///(select distinct m.Id as Id, 
        ///	m.MeetingNo as MeetingNo,
        ///	m.Venue as Venue,
        ///	m.[Date] as [Date],
        ///	m.StartTime as StartTime,
        ///	m.EndTime as EndTime,
        ///                   m.TypeId as TypeId,
        ///	ms.[Name] as StatusName 
        ///	from Meeting m
        ///	left join MeetingStatus ms on m.StatusId = ms.Id
        ///	inner join vwUserProfilePermissions upp on 
        ///	(( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.Perm [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CanSeeMeeting {
            get {
                return ResourceManager.GetString("CanSeeMeeting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select 
        /// aia.Id as Id,
        /// aia.Name as Name,
        /// aia.Description as Description,
        /// u.FullName as AssignTo,
        /// u.Designation as Designation,
        /// aia.DueDate as DueDate,
        ///aias.Name as StatusName,
        ///aia.AgendaItemId as AgendaItemId
        /// from AgendaItemAction aia 
        /// inner join AgendaItemActionAssignment aiaa on aia.Id = aiaa.AgendaItemActionId
        /// inner join AgendaItemActionStatus aias on aia.StatusId = aias.Id
        /// inner join UserProfile up on aiaa.UserProfileId = up.Id
        /// inner join dbo.[User] u on up.UserId = u.Id.
        /// </summary>
        public static string GetAgendaItemActions {
            get {
                return ResourceManager.GetString("GetAgendaItemActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct 
        ///	agendaItem.Id,
        ///	agendaItem.MeetingId,
        ///	agendaItem.Title as Title,
        ///	agendaItem.MeetingNo as MeetingNo,
        ///	agendaItem.TypeId,
        ///	agendaItem.StatusName,
        ///	agendaItem.CreatedOn,
        ///	agendaItem.Comment as Comment,
        ///	agendaItem.MeetingUrgency,
        ///	agendaItem.AgendaItemTypeId,
        ///	agendaItem.ParentId,
        ///	agendaItem.ItemType,
        ///	agendaItem.UpdatedOn
        ///	from
        ///(select  distinct
        ///	ai.Id as Id,
        ///	me.Id as MeetingId,
        ///	ai.Title as Title,
        ///	me.MeetingNo as MeetingNo,
        ///	me.TypeId,
        ///	ais.[Name] as StatusName,
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAgendaItemAssignment {
            get {
                return ResourceManager.GetString("GetAgendaItemAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select  COUNT( distinct ai.Id) 
        ///	from 
        ///	AgendaItem ai 
        ///	left join AgendaItemUnit aiu on ai.Id = aiu.AgendaItemId 
        ///	left join MeetingAgenda ma on ma.agendaItemId = ai.id 
        ///	left join Meeting m on m.Id = ma.MeetingId  
        ///	left join MeetingUrgency mu on mu.Id = m.UrgencyId
        ///	left join MeetingType mt on m.TypeId = mt.id
        ///	left join AgendaItemStatus ais on ai.StatusId = ais.Id
        ///	inner join AgendaItemType at on at.Id = ai.TypeId  and ai.TypeId not in (1,2,6,7)
        ///	inner join vwUserProfilePermissions upp on 
        ///	(u [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAgendaItemInboxCountAll {
            get {
                return ResourceManager.GetString("GetAgendaItemInboxCountAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(agendaItem.id)
        ///from
        ///(select  distinct ai.Id
        ///from AgendaItem ai
        ///left join AgendaItemUnit aiu on ai.Id = aiu.AgendaItemId
        ///left join  Unit un on un.Id = aiu.UnitId
        ///inner join AgendaItemAssignment aia on ai.Id = aia.AgendaItemId
        ///left join MeetingAgenda ma on ma.agendaItemId = ai.id 
        ///left join Meeting me on me.Id = ma.MeetingId  
        ///left join MeetingUrgency mu on mu.Id = me.UrgencyId
        ///left join MeetingType mt on me.TypeId = mt.id
        ///left join AgendaItemStatus ais on ai.StatusId = ais.Id
        ///inner j [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAgendaItemInboxCountAssigned {
            get {
                return ResourceManager.GetString("GetAgendaItemInboxCountAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct rp.PermissionId from 
        ///RolePermission rp
        ///inner join UserProfile up on up.RoleId = rp.RoleId
        ///left join UserProfileUnit upu on up.Id = upu.UserProfileId
        ///left join AgendaItemUnit aiu on upu.UnitId = aiu.UnitId
        ///inner join dbo.[User] u on u.Id = up.UserId
        ///where u.AccountDataId = @userId and 
        ///ISNULL(aiu.AgendaItemId, @agendaItemId) = @agendaItemId and up.Active = 1.
        /// </summary>
        public static string GetAgendaItemPermissions {
            get {
                return ResourceManager.GetString("GetAgendaItemPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct ai.Id as Id,
        ///	me.Id as MeetingId,
        ///	ai.Title as Title,
        ///	me.MeetingNo as MeetingNo,
        ///	me.TypeId, 
        ///	mt.Name as MeetingTypeName,
        ///	ais.[Name] as StatusName,
        ///	ai.CreatedOn as CreatedOn,
        ///	ai.Comment as Comment,
        ///	mu.Name as MeetingUrgency,
        ///	at.Id as AgendaItemTypeId,
        ///	ai.ParentId as ParentId,
        ///	(SELECT
        ///	CASE 
        ///	WHEN ai.ParentId is null THEN CAST(ai.OrderNo AS nvarchar(50))
        ///	ELSE (select CAST(i.OrderNo as nvarchar(50)) from AgendaItem i where i.Id = ai.ParentId) + &apos;.&apos; + CAST(ai.OrderNo as [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAgendaItemsForPreviousMeeting {
            get {
                return ResourceManager.GetString("GetAgendaItemsForPreviousMeeting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select ai.Id as Id,
        ///ai.MeetingId as MeetingId,
        ///ai.Title as Title,
        ///me.MeetingNo as MeetingNo,
        ///ais.[Name] as StatusName,
        ///ai.CreatedOn as CreatedOn,
        ///mu.Name as MeetingUrgency,
        ///at.Flag as ItemType,
        ///un.Name as UnitName
        ///from AgendaItem ai
        ///left join AgendaItemUnit aid on aid.AgendaItemId = ai.Id
        ///left join AgendaItemStatus ais on ai.StatusId = ais.Id
        ///left join UserProfile up on up.UnitId = aid.UnitId and up.RoleId = &apos;Contributor&apos;
        ///left join [User] us on us.Id = up.UserId
        ///left join Meeting me on me.Id = [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAgendaItemUnit {
            get {
                return ResourceManager.GetString("GetAgendaItemUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct a.Id as Id,
        ///	a.[Name] as Name,
        ///	a.Description as Description,
        ///	m.MeetingNo as MeetingNo,
        ///	mt.[Name] as MeetingType,
        ///	s.[Name] as StatusName,
        ///	convert(nvarchar(15), a.DueDate, 104) as DueDateFormatted,
        ///	a.DueDate as DueDate
        ///	from AgendaItemAction a
        ///	left join 
        ///	(select distinct ai.Id as Id
        ///		from 
        ///		AgendaItem ai 
        ///		left join AgendaItemUnit aiu on ai.Id = aiu.AgendaItemId 
        ///		left join MeetingAgenda ma on ma.agendaItemId = ai.id 
        ///		left join Meeting m on m.Id = ma.MeetingId  
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAllActions {
            get {
                return ResourceManager.GetString("GetAllActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select COUNT(distinct a.Id) 
        ///	from AgendaItemAction a
        ///	left join 
        ///	(select distinct ai.Id as Id
        ///		from 
        ///		AgendaItem ai 
        ///		left join AgendaItemUnit aiu on ai.Id = aiu.AgendaItemId 
        ///		left join MeetingAgenda ma on ma.agendaItemId = ai.id 
        ///		left join Meeting m on m.Id = ma.MeetingId  
        ///		inner join vwUserProfilePermissions upp on 
        ///		upp.UnitId = aiu.UnitId or  upp.UnitId is null 
        ///		and upp.PermissionId = &apos;module_agenda_items&apos;  
        ///		and ( upp.ProfileCompanyId = ai.CompanyId or  upp.ProfileCompanyId i [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAllActionsCount {
            get {
                return ResourceManager.GetString("GetAllActionsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct 
        ///	agendaItem.Id,
        ///	agendaItem.MeetingId,
        ///	agendaItem.Title as Title,
        ///	agendaItem.MeetingNo as MeetingNo,
        ///	agendaItem.TypeId,
        ///	agendaItem.MeetingTypeName,
        ///	agendaItem.StatusName,
        ///	agendaItem.CreatedOn,
        ///	agendaItem.Comment as Comment,
        ///	agendaItem.MeetingUrgency,
        ///	agendaItem.AgendaItemTypeId,
        ///	agendaItem.ParentId,
        ///	agendaItem.ItemType,
        ///	agendaItem.UpdatedOn
        ///	from
        ///(select distinct ai.Id as Id,
        ///	m.Id as MeetingId,
        ///	ai.Title as Title,
        ///	m.MeetingNo as MeetingNo,
        ///	m.TypeId,
        ///	mt.N [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAllAgendaItems {
            get {
                return ResourceManager.GetString("GetAllAgendaItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct meeting.Id as Id, 
        ///meeting.Name as Name,
        ///	meeting.MeetingNo as MeetingNo,
        ///	meeting.Venue as Venue,
        ///	meeting.[Date] as [Date],
        ///	meeting.StartTime as StartTime,
        ///	meeting.EndTime as EndTime,
        ///	meeting.StatusId as StatusId,
        ///	meeting.StatusName as StatusName
        ///	from 
        ///(select distinct m.Id as Id, 
        ///m.Name as Name,
        ///	m.MeetingNo as MeetingNo,
        ///	m.Venue as Venue,
        ///	m.[Date] as [Date],
        ///	m.StartTime as StartTime,
        ///	m.EndTime as EndTime,
        ///	ms.[Name] as StatusName,
        ///	m.TypeId as TypeId,
        ///	m.Stat [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAllMeetings {
            get {
                return ResourceManager.GetString("GetAllMeetings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select  COUNT( distinct m.Id) 
        ///	from Meeting m
        ///	left join MeetingStatus ms on m.StatusId = ms.Id
        ///	inner join vwUserProfilePermissions upp on 
        ///	(( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.PermissionId = &apos;module_bc_meeting&apos;
        ///	or ( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.PermissionId = &apos;module_ac_meeting&apos;
        ///	or ( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.PermissionId = &apos;module_ic_meeting&apos; 
        ///	or ( upp. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAllMeetingsCount {
            get {
                return ResourceManager.GetString("GetAllMeetingsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct p.Id as Id,
        ///pr.Name as RoleName,
        ///p.Active as StatusId,
        ///u.AccountDataId as AccountDataId,
        ///c.Name as CompanyName
        ///from UserProfile p
        ///left join AspNetRoles pr on p.RoleId = pr.Id
        ///left join [User] u on p.UserId = u.Id
        ///left join Company c on p.CompanyId = c.Id
        ///left join UserProfileUnit upu on p.Id = upu.UserProfileId
        ///left join Unit un on upu.UnitId = un.Id
        ///where u.AccountDataId = @userId.
        /// </summary>
        public static string GetAllUserProfiles {
            get {
                return ResourceManager.GetString("GetAllUserProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select u.Id as Id,
        ///u.FullName as FullName,
        ///r.[Name] as RoleName,
        ///u.Active as Status,
        ///u.Designation as Designation,
        ///u.AccountDataId as AccountDataId
        ///from [User] u
        ///left join UserProfile up on u.Id = up.UserId
        ///left join AspNetRoles r on up.RoleId = r.Id.
        /// </summary>
        public static string GetAllUsers {
            get {
                return ResourceManager.GetString("GetAllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select a.Id
        ///from AgendaItemAction a
        ///left join AgendaItemActionAssignment aia on a.Id = aia.AgendaItemActionId
        ///left join UserProfile up on aia.UserProfileId = up.Id
        ///left join [User] u on up.UserId = u.Id
        ///left join AgendaItemActionStatus ms on a.StatusId = ms.Id
        ///where u.AccountDataId = @userId.
        /// </summary>
        public static string GetAssignedActionIds {
            get {
                return ResourceManager.GetString("GetAssignedActionIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select a.Id as Id,
        ///	a.[Name] as Name,
        ///	a.Description as Description,
        ///	m.MeetingNo as MeetingNo,
        ///	mt.[Name] as MeetingType,
        ///	s.[Name] as StatusName,
        ///	convert(nvarchar(15), a.DueDate, 104) as DueDateFormatted,
        ///	a.DueDate as DueDate
        ///	from AgendaItemAction a
        ///	left join AgendaItemActionAssignment aia on a.Id = aia.AgendaItemActionId
        ///	left join UserProfile up on aia.UserProfileId = up.Id
        ///	left join [User]u on up.UserId = u.Id
        ///	left join AgendaItem ai on a.AgendaItemId = ai.Id
        ///	left join MeetingAgenda [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAssignedActions {
            get {
                return ResourceManager.GetString("GetAssignedActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct meeting.Id as Id
        ///from
        ///(select 
        ///m.Id as Id,
        ///m.TypeId
        ///from
        ///Meeting m 
        ///inner join MeetingAssignment ma on m.Id = ma.MeetingId
        ///left join MeetingStatus ms on m.StatusId = ms.Id
        ///inner join vwUserProfilePermissions upp on ma.UserProfileId = upp.ProfileId and
        ///(( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.PermissionId = &apos;module_bc_meeting&apos;
        ///or ( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.PermissionId = &apos;module_ac_meeting&apos;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAssignedMeetingIds {
            get {
                return ResourceManager.GetString("GetAssignedMeetingIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct
        ///meeting.Id as Id,
        ///meeting.Name as Name, 
        ///meeting.MeetingNo as MeetingNo,
        ///meeting.Venue as Venue,
        ///meeting.[Date] as [Date],
        ///meeting.StartTime as StartTime,
        ///meeting.EndTime as EndTime,
        ///meeting.StatusId as StatusId,
        ///meeting.StatusName as StatusName
        ///from
        ///(select 
        ///m.Id as Id, 
        ///m.Name as Name,
        ///m.MeetingNo as MeetingNo,
        ///m.Venue as Venue,
        ///m.[Date] as [Date],
        ///m.StartTime as StartTime,
        ///m.EndTime as EndTime,
        ///m.StatusId as StatusId,
        ///ms.[Name] as StatusName,
        ///m.TypeId
        ///from
        ///Meeting m [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAssignedMeetings {
            get {
                return ResourceManager.GetString("GetAssignedMeetings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select COUNT(distinct meeting.Id)
        ///from
        ///(select 
        ///m.Id as Id
        ///from
        ///Meeting m 
        ///inner join MeetingAssignment ma on m.Id = ma.MeetingId
        ///left join MeetingStatus ms on m.StatusId = ms.Id
        ///inner join vwUserProfilePermissions upp on ma.UserProfileId = upp.ProfileId and
        ///(( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.PermissionId = &apos;module_bc_meeting&apos;
        ///or ( upp.ProfileCompanyId = m.CompanyId or  upp.ProfileCompanyId is null) and upp.PermissionId = &apos;module_ac_meeting&apos;
        ///or ( upp.P [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetAssignedMeetingsCount {
            get {
                return ResourceManager.GetString("GetAssignedMeetingsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct p.PermissionId from vwUserProfilePermissions p where p.AccountDataId = @userId.
        /// </summary>
        public static string GetGlobalPermissions {
            get {
                return ResourceManager.GetString("GetGlobalPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct ai.Id as Id,
        ///	me.Id as MeetingId,
        ///	ai.Title as Title,
        ///	me.MeetingNo as MeetingNo,
        ///	me.TypeId, 
        ///	mt.Name as MeetingTypeName,
        ///	ais.[Name] as StatusName,
        ///	ai.CreatedOn as CreatedOn,
        ///	ai.Comment as Comment,
        ///	mu.Name as MeetingUrgency,
        ///	at.Id as AgendaItemTypeId,
        ///	ai.ParentId as ParentId,
        ///	ai.WorkflowInstId as WorkflowInstId,
        ///	wis.Id as ActiveStepId,
        ///	sb.EstimatedValueUSD as BudgetUsd,
        ///	sb.EstimatedValueUSD as BudgetAed,
        ///	ss.Subject as Subject,
        ///ai.DecisionComment as DecisionComme [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetMeetingAgendaItems {
            get {
                return ResourceManager.GetString("GetMeetingAgendaItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT m.Id as MeetingId
        ///      ,m.WorkflowInstId as WorkflowInstId
        ///      ,m.TypeId
        ///	  ,wis.Id as StepId
        ///	  ,wis.Title as Action
        ///	  ,wis.Completed as Status
        ///	  ,wis.CompletedOn as ActualDate
        ///	  ,wis.TargetDate as TargetDate
        ///	  ,CONVERT(nvarchar(15), wis.CompletedOn, 103) as ActualDateFormatted
        ///	  ,CONVERT(nvarchar(15), wis.TargetDate, 103) as TargetDateFormatted
        ///	  ,wia.Id as ActionId
        ///	  ,anr.Name as Responsibility
        ///FROM Meeting m
        ///LEFT JOIN WorkflowInstStep wis on m.WorkflowInstId = wis.WorkflowI [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetMeetingTimeline {
            get {
                return ResourceManager.GetString("GetMeetingTimeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select u.Name, aiu.AgendaItemId from AgendaItemUnit aiu 
        ///inner join Unit u on aiu.UnitId = u.Id.
        /// </summary>
        public static string GetResponsibilities {
            get {
                return ResourceManager.GetString("GetResponsibilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select PermissionId, ProfileId, ProfileCompanyId as CompanyId, UnitId RoleId, UnitId, Condition  from vwUserProfilePermissions p where p.AccountDataId = @userId.
        /// </summary>
        public static string GetUserPermissions {
            get {
                return ResourceManager.GetString("GetUserPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select u.Name, upu.UserProfileId from UserProfileUnit upu 
        ///inner join Unit u on upu.UnitId = u.Id.
        /// </summary>
        public static string GetUserProfileUnits {
            get {
                return ResourceManager.GetString("GetUserProfileUnits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select CAST(COUNT(*) AS bit) from AgendaItemActionAssignment aia
        ///inner join UserProfile up on aia.UserProfileId = up.Id
        ///inner join dbo.[User] u on up.UserId =  u.Id
        ///where u.AccountDataId = @userId AND aia.AgendaItemActionId = @entityId.
        /// </summary>
        public static string IsAgendaItemActionAssigned {
            get {
                return ResourceManager.GetString("IsAgendaItemActionAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select CAST(COUNT(*) AS bit) from AgendaItemAssignment aia
        ///inner join UserProfile up on aia.UserProfileId = up.Id
        ///inner join dbo.[User] u on up.UserId =  u.Id
        ///where u.AccountDataId = @userId AND aia.AgendaItemId = @entityId.
        /// </summary>
        public static string IsAgendaItemAssigned {
            get {
                return ResourceManager.GetString("IsAgendaItemAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select CAST(COUNT(*) AS bit) from MeetingAssignment ms
        ///inner join UserProfile up on ms.UserProfileId = up.Id
        ///inner join dbo.[User] u on up.UserId =  u.Id
        ///where u.AccountDataId = @userId AND ms.MeetingId = @entityId.
        /// </summary>
        public static string IsMeetingAssigned {
            get {
                return ResourceManager.GetString("IsMeetingAssigned", resourceCulture);
            }
        }
    }
}
